name: Backend Continuous Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install --dev

      - name: Run linting
        run: |
          cd starter/backend
          pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install --dev

      - name: Run tests
        run: |
          cd starter/backend
          pipenv run test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install --dev

      - name: Run tests
        run: |
          cd starter/backend
          pipenv run test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd starter/backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name coworking-cluster

      - name: Deploy to EKS
        run: |
          cd starter/backend/k8s
          sed -i "s|image: backend|image: ${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}|g" deployment.yaml
          kubectl apply -f .
